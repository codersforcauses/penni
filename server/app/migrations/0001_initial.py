# Generated by Django 5.0.6 on 2024-07-14 10:48

import app.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Users",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("email", models.CharField(max_length=255)),
                ("mobile", models.CharField(max_length=20)),
                ("password_hash", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("status", models.CharField(max_length=50)),
                ("user_role", models.CharField(default="", max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="AuthUsers",
            fields=[
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("email", models.CharField(max_length=255)),
                ("mobile", models.CharField(max_length=20)),
                ("password", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("status", models.CharField(max_length=50)),
                ("user_role", models.CharField(default="", max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="custom_user_set", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True, related_name="custom_user_set", to="auth.permission"
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", app.models.AuthUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Tasks",
            fields=[
                ("task_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("category", models.CharField(default="", max_length=255)),
                ("description", models.TextField()),
                ("location", models.CharField(max_length=255)),
                ("budget", models.CharField(default="", max_length=255)),
                ("estimated_time", models.CharField(default="", max_length=255)),
                ("deadline", models.DateTimeField()),
                ("status", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.users"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Tasks",
            },
        ),
        migrations.CreateModel(
            name="Profiles",
            fields=[
                ("profile_id", models.AutoField(primary_key=True, serialize=False)),
                ("full_name", models.CharField(max_length=255)),
                ("avatar_url", models.CharField(blank=True, max_length=255)),
                ("bio", models.TextField(blank=True)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.users"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Profiles",
            },
        ),
        migrations.CreateModel(
            name="Payments",
            fields=[
                ("payment_id", models.AutoField(primary_key=True, serialize=False)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("payment_method", models.CharField(max_length=50)),
                ("status", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "task_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.tasks"
                    ),
                ),
                (
                    "payer_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.users"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Payments",
            },
        ),
        migrations.CreateModel(
            name="Bids",
            fields=[
                ("bid_id", models.AutoField(primary_key=True, serialize=False)),
                ("price", models.CharField(default="", max_length=50)),
                ("message", models.TextField(blank=True)),
                ("status", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "task_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.tasks"
                    ),
                ),
                (
                    "bidder_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.users"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Bids",
            },
        ),
    ]
